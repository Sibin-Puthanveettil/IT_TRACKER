//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;

namespace ITTracker.ITService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ITService.IITService")]
    public interface IITService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IITService/DoWork", ReplyAction="http://tempuri.org/IITService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IITService/DoWork", ReplyAction="http://tempuri.org/IITService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IITService/TrackerSelect", ReplyAction="http://tempuri.org/IITService/TrackerSelectResponse")]
        System.Data.DataSet TrackerSelect(string flag, string PageVal, string parval1, string parval2, string parval3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IITService/TrackerSelect", ReplyAction="http://tempuri.org/IITService/TrackerSelectResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> TrackerSelectAsync(string flag, string PageVal, string parval1, string parval2, string parval3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IITService/TrackerConfirm", ReplyAction="http://tempuri.org/IITService/TrackerConfirmResponse")]
        string TrackerConfirm(string flag, string PageVal, string parval1, string parval2, string parval3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IITService/TrackerConfirm", ReplyAction="http://tempuri.org/IITService/TrackerConfirmResponse")]
        System.Threading.Tasks.Task<string> TrackerConfirmAsync(string flag, string PageVal, string parval1, string parval2, string parval3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IITService/TrackerDocumentUpload", ReplyAction="http://tempuri.org/IITService/TrackerDocumentUploadResponse")]
        string TrackerDocumentUpload(string flag, string Param, byte[] upload_file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IITService/TrackerDocumentUpload", ReplyAction="http://tempuri.org/IITService/TrackerDocumentUploadResponse")]
        System.Threading.Tasks.Task<string> TrackerDocumentUploadAsync(string flag, string Param, byte[] upload_file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IITService/IPDocumentUpload", ReplyAction="http://tempuri.org/IITService/IPDocumentUploadResponse")]
        string IPDocumentUpload(string flag, string Param, byte[] upload_file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IITService/IPDocumentUpload", ReplyAction="http://tempuri.org/IITService/IPDocumentUploadResponse")]
        System.Threading.Tasks.Task<string> IPDocumentUploadAsync(string flag, string Param, byte[] upload_file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IITService/SelectClob", ReplyAction="http://tempuri.org/IITService/SelectClobResponse")]
        string SelectClob(string flag, string PageVal, string parval1, string parval2, string parval3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IITService/SelectClob", ReplyAction="http://tempuri.org/IITService/SelectClobResponse")]
        System.Threading.Tasks.Task<string> SelectClobAsync(string flag, string PageVal, string parval1, string parval2, string parval3);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IITServiceChannel : ITTracker.ITService.IITService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ITServiceClient : System.ServiceModel.ClientBase<ITTracker.ITService.IITService>, ITTracker.ITService.IITService {
        
        public ITServiceClient() {
        }
        
        public ITServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ITServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ITServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ITServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public System.Data.DataSet TrackerSelect(string flag, string PageVal, string parval1, string parval2, string parval3) {
            return base.Channel.TrackerSelect(flag, PageVal, parval1, parval2, parval3);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TrackerSelectAsync(string flag, string PageVal, string parval1, string parval2, string parval3) {
            return base.Channel.TrackerSelectAsync(flag, PageVal, parval1, parval2, parval3);
        }
        
        public string TrackerConfirm(string flag, string PageVal, string parval1, string parval2, string parval3) {
            return base.Channel.TrackerConfirm(flag, PageVal, parval1, parval2, parval3);
        }
        
        public System.Threading.Tasks.Task<string> TrackerConfirmAsync(string flag, string PageVal, string parval1, string parval2, string parval3) {
            return base.Channel.TrackerConfirmAsync(flag, PageVal, parval1, parval2, parval3);
        }
        
        public string TrackerDocumentUpload(string flag, string Param, byte[] upload_file) {
            return base.Channel.TrackerDocumentUpload(flag, Param, upload_file);
        }
        
        public System.Threading.Tasks.Task<string> TrackerDocumentUploadAsync(string flag, string Param, byte[] upload_file) {
            return base.Channel.TrackerDocumentUploadAsync(flag, Param, upload_file);
        }
        
        public string IPDocumentUpload(string flag, string Param, byte[] upload_file) {
            return base.Channel.IPDocumentUpload(flag, Param, upload_file);
        }
        
        public System.Threading.Tasks.Task<string> IPDocumentUploadAsync(string flag, string Param, byte[] upload_file) {
            return base.Channel.IPDocumentUploadAsync(flag, Param, upload_file);
        }
        
        public string SelectClob(string flag, string PageVal, string parval1, string parval2, string parval3) {
            return base.Channel.SelectClob(flag, PageVal, parval1, parval2, parval3);
        }
        
        public System.Threading.Tasks.Task<string> SelectClobAsync(string flag, string PageVal, string parval1, string parval2, string parval3) {
            return base.Channel.SelectClobAsync(flag, PageVal, parval1, parval2, parval3);
        }

        internal DataSet TrackerSelect(string queryFlag, string queryID, string searchKey, string v)
        {
            return base.Channel.TrackerSelect(queryFlag, queryID, searchKey, v, "");
        }
    }
}
